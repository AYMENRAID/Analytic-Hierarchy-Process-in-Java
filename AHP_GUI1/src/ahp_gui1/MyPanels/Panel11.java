/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ahp_gui1.MyPanels;

import ahp_gui1.AHP;
import ahp_gui1.Kryterium;
import ahp_gui1.NewJFrame;
import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextArea;
import javax.swing.SwingWorker;

/**
 *
 * @author Un1kalny
 */
public class Panel11 extends javax.swing.JPanel {
    AHP ahp;
    NewJFrame frame;
    String wczytanyText = "";
    /**
     * Creates new form Panel11
     */
    public Panel11(AHP ahp, NewJFrame frame) {
        this.frame = frame;
        this.ahp = ahp;
        initComponents();
        //JPanel matrix = new Matrix();
        //matrix.setPreferredSize(new Dimension(400, 400));
        //jPanel1.setVisible(true);
        //matrix.setVisible(true);
        //jPanel1.add(matrix);
        //jPanel1.revalidate();
        //jPanel1.repaint();
        jLabel1.setText("");
        jLabel2.setText("");
        jLabel3.setText("");
        jTextField1.setText("");
    }
    
    public void clearPanel() {
        jLabel3.setText("");
        jTextField1.setText("");
    }
    
    public void updateMatrix(double [][] tab) {
        JPanel matrix = new Matrix(tab);
        matrix.setPreferredSize(new Dimension(400, 400));
        jPanel1.removeAll();
        jPanel1.setVisible(true);
        matrix.setVisible(true);
        jPanel1.add(matrix);
        jPanel1.revalidate();
        jPanel1.repaint();
    }
    
    public void ustawTextLabela(String text) {
        jLabel1.setText(text);
    }
    
    public void ustawTextLabela2(String text) {
        jLabel2.setText(text);
    }
    
    public void ustawTextLabela3(String text) {
        jLabel3.setText(text);
    }
    
    public String wczytajText() {
        //double value;
        while(wczytanyText.equalsIgnoreCase("")) {
            //do nothing
        }
        //value = Double.parseDouble(wczytanyText);
        String tmp = new String(wczytanyText);
        wczytanyText = "";
        return tmp;
    }
    
    public String getWczytywanieTextu() {
        WczytywanieTextu task = new WczytywanieTextu(frame);
        String s = "";
        task.execute();
        try {
            s = task.get();
        }catch(Exception ex) {
            ex.printStackTrace();
        }
        return s;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("jLabel1");

        jTextField1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField1KeyPressed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("jLabel2");

        jPanel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.setLayout(new java.awt.BorderLayout());

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 88, Short.MAX_VALUE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(57, 57, 57))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 389, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 367, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(105, 105, 105)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(110, 110, 110)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 83, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 355, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER) {
            wczytanyText = jTextField1.getText();
            jTextField1.setText("");
        }
    }//GEN-LAST:event_jTextField1KeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}

class WczytywanieTextu extends SwingWorker<String, Object>{
    NewJFrame frame;

    public WczytywanieTextu(NewJFrame frame) {
        this.frame = frame;
    }
    
    @Override
     public String doInBackground() {
         return frame.p11.wczytajText();
     }
}


class Matrix extends JPanel {
    public static class Number extends JPanel {
        public Number(double[][] macierz, int x, int y) {
            JTextArea area = new JTextArea();
            area.setText(Double.toString(round(macierz[x][y], 2)));
            area.setEditable(false);
            area.setSize(this.getMaximumSize());
            this.add(area);
        }
    }

    public Matrix(double[][] macierz) {
        this.setLayout(new GridLayout(macierz.length, macierz.length));
        for (int i = 0; i < macierz.length; ++i) {
            for(int j = 0; j < macierz.length; ++j) {
                Number x = new Number(macierz, i, j);
                x.setVisible(true);
                this.add(x);
            }
        }
    }
    
 
     public static double round(double f, int places)

     {  double temp = (double)(f*(Math.pow(10, places)));

          temp = (Math.round(temp));

          temp = temp/(int)(Math.pow(10, places));

          return temp;

    }
    
}
