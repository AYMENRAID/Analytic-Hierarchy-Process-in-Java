/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ahp_gui1.MyPanels;

import ahp_gui1.AHP;
import ahp_gui1.Kryterium;
import ahp_gui1.NewJFrame;
import ahp_gui1.Porownania;
import ahp_gui1.Wazenie;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import javax.swing.DefaultListModel;
import java.util.*;
import sun.management.resources.agent;

/**
 *
 * @author Un1kalny
 */
public class Panel1 extends javax.swing.JPanel {
    DefaultListModel listModel1 = new DefaultListModel();
    DefaultListModel listModel2 = new DefaultListModel();
    AHP ahp;
    NewJFrame frame;
    
    public Panel1(AHP ahp, NewJFrame frame) {
        this.ahp = ahp;
        this.frame = frame;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList<>();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jButton1.setText("Add Goal");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Add Criterium");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jList1.setModel(listModel1);
        jScrollPane1.setViewportView(jList1);

        jList2.setModel(listModel2);
        jScrollPane2.setViewportView(jList2);

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField1KeyPressed(evt);
            }
        });

        jTextField2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField2KeyPressed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("<html>You can select a criterium<br>and then click button \"Add Subcriterium\"<br>to add subcriterium to this criterium.</html>");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jButton3.setText("Add Subcriterium");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Delete selected goal");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Delete selected criterium/subcriterium");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton7.setText("<html><center>End<br>adding<br>and<br>start<br>comparison</center></html>");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTextField1)
                            .addComponent(jScrollPane1))
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE)
                                    .addComponent(jTextField2))
                                .addGap(64, 64, 64)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel1)
                                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 558, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(135, 135, 135)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 408, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(43, 43, 43)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 54, Short.MAX_VALUE)
                    .addComponent(jTextField1)
                    .addComponent(jTextField2))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 229, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 229, Short.MAX_VALUE))
                    .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, 72, Short.MAX_VALUE)
                    .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 18, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        String textField1Content = jTextField1.getText();
        
        if(!textField1Content.equalsIgnoreCase("")) {
            
            for(int i = 0; i < ahp.cele.size(); ++i) {
                if(ahp.cele.get(i).equalsIgnoreCase(textField1Content)) {
                    jTextField1.setText("");
                    return;
                }
            }
            
            ahp.cele.add(textField1Content);
            listModel1.add(ahp.cele.size() - 1, ahp.cele.get(ahp.cele.size() - 1));
            jTextField1.setText("");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        String textField2Content = jTextField2.getText();
        Kryterium kryterium;
        if(!textField2Content.equalsIgnoreCase("")) {
            
            for(int i = 0; i < ahp.kryteria.size(); ++i) {
                if(ahp.kryteria.get(i).nazwa.equalsIgnoreCase(textField2Content)) {
                    jTextField2.setText("");
                    return;
                }
            }
            kryterium = new Kryterium(textField2Content);
            ahp.kryteria.add(kryterium);
            listModel2.add(ahp.kryteria.size() - 1, ahp.kryteria.get(ahp.kryteria.size() - 1).nazwa);
            jTextField2.setText("");
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jTextField1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jButton1ActionPerformed(new ActionEvent(evt, 0, ""));
        }
    }//GEN-LAST:event_jTextField1KeyPressed

    private void jTextField2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField2KeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jButton2ActionPerformed(new ActionEvent(evt, 0, ""));
        }
    }//GEN-LAST:event_jTextField2KeyPressed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        
        /*System.out.println(ahp.kryteria.toString());
        for(int i = 0; i < ahp.kryteria.size(); ++i) {
            System.out.println("XXX: " + ahp.kryteria.get(i).listaPodkryteriow);
        }*/
        
        String selectedCriterium = jList2.getSelectedValue();
        String textField2Content = jTextField2.getText();
        String selectedName = null;
        
        if(selectedCriterium == null)
            return;
        
        if(selectedCriterium.contains("/")) {
          String parts[] = selectedCriterium.split("/");
          selectedName = parts[parts.length - 1];
        } else {
            selectedName = selectedCriterium;
        }
        
        int index = -1;
        if(selectedName != null && !selectedName.equalsIgnoreCase("") && !textField2Content.equalsIgnoreCase("")) {
            Kryterium kryterium = null;
            for(int i = 0; i < ahp.kryteria.size(); ++i) {
                if(ahp.kryteria.get(i).nazwa.equalsIgnoreCase(selectedName)) {
                    kryterium = ahp.kryteria.get(i);
                    index = i;
                    break;
                }
            }
            if(index == -1) {
                jTextField2.setText("");
                return;
            }
            
            if(kryterium.listaPodkryteriow != null) {
                for(int i = 0; i < kryterium.listaPodkryteriow.size(); ++i) {
                    if(kryterium.listaPodkryteriow.get(i).nazwa.equalsIgnoreCase(textField2Content)) {
                        jTextField2.setText("");  
                        return;
                    }
                }
            }
            
            if(kryterium.listaPodkryteriow == null)
                kryterium.listaPodkryteriow = new ArrayList<>();
            Kryterium k = new Kryterium(textField2Content, kryterium);
            ahp.kryteria.add(index, k);
            kryterium.listaPodkryteriow.add(k);
            listModel2.add(listModel2.size(), (selectedCriterium + "/" + textField2Content));
            jTextField2.setText("");
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        String selectedGoal = jList1.getSelectedValue();
        if(selectedGoal == null)
            return;
        for(int i = 0; i < ahp.cele.size(); ++i) {
            if(ahp.cele.get(i).equalsIgnoreCase(selectedGoal)) {
                ahp.cele.remove(i);
                for(int j = 0; j < jList1.getModel().getSize(); ++j) {
                    if(jList1.getModel().getElementAt(j).equalsIgnoreCase(selectedGoal)) {
                        listModel1.removeElementAt(j);
                        return;
                    }
                }
            }
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    void rekurencyjneUsuwaniePotomkow(Kryterium k) {
        for(int i = 0; i < ahp.kryteria.size(); ++i) {
            Kryterium kryterium = ahp.kryteria.get(i);
            if(kryterium.nazwa.equalsIgnoreCase(k.nazwa)) {
                if(kryterium.listaPodkryteriow != null) {
                    for(int j = 0; j < kryterium.listaPodkryteriow.size(); ++j) {
                        rekurencyjneUsuwaniePotomkow(kryterium.listaPodkryteriow.get(j));
                    }
                }
                String tmp = kryterium.nazwa;
                for(int l = 0; l < ahp.kryteria.size(); ++l) {
                    if(tmp.equalsIgnoreCase(ahp.kryteria.get(l).nazwa))
                        ahp.kryteria.remove(l);
                }
            }
        }
    }
    
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        String selectedCriteria = jList2.getSelectedValue();
        if(selectedCriteria == null)
            return;
        
        String selectedName = null;
        
        if(selectedCriteria == null)
            return;
        
        if(selectedCriteria.contains("/")) {
          String parts[] = selectedCriteria.split("/");
          selectedName = parts[parts.length - 1];
        } else {
            selectedName = selectedCriteria;
        }
        // Usuwam liste podkryteriow tego kryterium
        for(int i = 0; i < ahp.kryteria.size(); ++i) {
            if(ahp.kryteria.get(i).nazwa.equalsIgnoreCase(selectedName)) {
                rekurencyjneUsuwaniePotomkow(ahp.kryteria.get(i));
            }
        }
        // Usuwam kryterium z kazdej mozliwej listy podkryteriow
        for(int i = 0; i < ahp.kryteria.size(); ++i) {
            if(ahp.kryteria.get(i).listaPodkryteriow != null) {
                for(int j = 0;  j < ahp.kryteria.get(i).listaPodkryteriow.size(); ++j) {
                if(ahp.kryteria.get(i).listaPodkryteriow.get(j).nazwa.equalsIgnoreCase(selectedName)) {
                    ahp.kryteria.get(i).listaPodkryteriow.remove(j);
                    break;
                }
            }
            }
        }
        // Usuwam potem dopiero to kryterium
        for(int i = 0; i < ahp.kryteria.size(); ++i) {
            if(ahp.kryteria.get(i).nazwa.equalsIgnoreCase(selectedName)) {
                ahp.kryteria.remove(i);
            }
        }
        // Usuwam z listy z panelu
        for(int j = 0; j < jList2.getModel().getSize(); ++j) {
                    if(jList2.getModel().getElementAt(j).toLowerCase().contains(selectedName.toLowerCase())) {
                        listModel2.removeElementAt(j);
                        --j;
                    }
        }
        /*for(int i = 0; i < ahp.kryteria.size(); ++i) {
            System.out.println("-----------------");
            System.out.println(ahp.kryteria.get(i).nazwa);
            if(ahp.kryteria.get(i).listaPodkryteriow != null)
                System.out.println(ahp.kryteria.get(i).listaPodkryteriow.toString());
            System.out.println("-----------------");
        }*/
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
   
        if(ahp.cele.size() <= 1) {
            jLabel2.setText("Za mało celi.");
            return;
        }
        
        if(ahp.kryteria.size() <= 1) {
            jLabel2.setText("Za mało kryteriów.");
            return;
        }
        
        int counter = 0;
        
        for(int i = 0; i < ahp.kryteria.size(); ++i) {
            if(ahp.kryteria.get(i).parent == null)
                ++counter;
        }
        
        if(counter <= 1) {
            jLabel2.setText("Za mało kryteriów.");
            return;
        }
        
        for(int i = 0; i < ahp.kryteria.size(); ++i) {
            if(ahp.kryteria.get(i).listaPodkryteriow != null && ahp.kryteria.get(i).listaPodkryteriow.size() == 1) {
                jLabel2.setText("<html>Za mało<br>podkryteriów.</html>");
                return;
            }
        }
        
            ahp.AHP_CREATED = true;
            frame.p2.update(); // <-----------------------SHOW AHP
            frame.p1.setVisible(false);
            frame.p11.setVisible(true);
            Wazenie w = new Wazenie(ahp, frame);
            w.execute();
            //Porownania p = new Porownania(ahp, frame);
            //p.execute();
            try {
                //w.get();
            }catch(Exception ex) {
                ex.printStackTrace();
            }
            //ahp.ustalWaznoscKryteriow();
        
    }//GEN-LAST:event_jButton7ActionPerformed

    
    public void clearPanel() {
        listModel1.clear();
        listModel2.clear();
        jTextField1.setText("");
        jTextField2.setText("");
        jLabel2.setText("");
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JList<String> jList1;
    private javax.swing.JList<String> jList2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
}
